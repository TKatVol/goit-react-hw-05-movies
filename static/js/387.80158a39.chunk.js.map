{"version":3,"file":"static/js/387.80158a39.chunk.js","mappings":"kMAEaA,EAAMC,EAAAA,GAAAA,IAAH,oFAMHC,EAAUD,EAAAA,GAAAA,EAAH,gEAKPE,EAAeF,EAAAA,GAAAA,IAAH,+C,kBCVZG,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC1B,OACI,UAACL,EAAD,YACI,SAACG,EAAD,CAAcG,IAAKC,EAAcC,IAAI,aAAaC,MAAM,SACxD,SAACP,EAAD,UAAUG,MAGrB,C,qKCRYK,E,OAAiBT,GAAAA,IAAH,0C,SCMdU,EAAU,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,IACXI,EAAAA,EAAAA,IAAqBV,GAChBW,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAAgBR,EAAWQ,EAAU,IAC7CC,OAAM,SAAAN,GAAWC,EAASD,EAAQ,IAClCO,SAAQ,kBAAMR,GAAW,EAAjB,GAChB,GAAE,CAACN,KAGA,UAACF,EAAD,YACI,SAAC,KAAD,CACIiB,QAASV,EACTW,OAAO,KACPnB,MAAM,KACNoB,UAAU,iBACVC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,aAGxDhB,GAAWA,EAAQiB,OAAS,IACxB,wBAEOjB,EAAQkB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAEvB,OACI,2BACI,wBAAKD,KACL,uBAAIC,MAFCF,EAKZ,MAIhBnB,GAA8B,IAAnBA,EAAQiB,SAAgB,qEAEnCb,IAAS,SAACf,EAAA,EAAD,CAAcC,QAASc,EAAMd,YAGlD,EAED,G,sLCvDMgC,EAAU,mCACVC,EAAW,+BAEJC,EAAmB,mCAAG,oGACRC,MAAM,GAAD,OAAIF,EAAJ,qCAAyCD,IADtC,cACzBI,EADyB,gBAGlBA,EAASC,OAHS,mFAAH,qDAMnBC,EAAiB,mCAAG,WAAOC,GAAP,uFACNJ,MAAM,GAAD,OAAIF,EAAJ,iCAAqCD,EAArC,kBAAsDO,IADrD,WACvBH,EADuB,QAEfI,GAFe,sBAGnB,IAAIC,MAAM,0DAHS,uBAMhBL,EAASC,OANO,mFAAH,sDASjBK,EAAoB,mCAAG,WAAOb,GAAP,uFACTM,MAAM,GAAD,OAAIF,EAAJ,kBAAsBJ,EAAtB,oBAAoCG,IADhC,WAC1BI,EAD0B,QAGlBI,GAHkB,sBAItB,IAAIC,MAAM,0DAJY,uBAOnBL,EAASC,OAPU,mFAAH,sDAUpBM,EAAiB,mCAAG,WAAOd,GAAP,uFACNM,MAAM,GAAD,OAAIF,EAAJ,kBAAsBJ,EAAtB,4BAA4CG,IAD3C,WACvBI,EADuB,QAGfI,GAHe,sBAInB,IAAIC,MAAM,0DAJS,uBAOhBL,EAASC,OAPO,mFAAH,sDAUjBpB,EAAoB,mCAAG,WAAOY,GAAP,uFACTM,MAAM,GAAD,OAAIF,EAAJ,kBAAsBJ,EAAtB,4BAA4CG,IADxC,WAC1BI,EAD0B,QAGlBI,GAHkB,sBAItB,IAAIC,MAAM,0DAJY,uBAOnBL,EAASC,OAPU,mFAAH,qD","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Box = styled.div`\n  display: flex;\n  padding: 20px;\n  align-items: center;\n`;\n\nexport const Message = styled.p`\n  font-weight: 800;\n  color: #78141b;\n`;\n\nexport const StyledPoster = styled.img`\n  margin-right: 20px;\n`","import { Box, StyledPoster, Message } from \"../ErrorMessage/ErrorMessage.styled\";\nimport defaultImage from \"../../images/defaultImage.jpg\";\n\nexport const ErrorMessage = ({message}) => {\n    return (\n        <Box>\n            <StyledPoster src={defaultImage} alt=\"movie card\" width=\"240\" />\n            <Message>{message}</Message>\n        </Box>\n    );\n};","import styled from \"styled-components\";\n\nexport const ReviewsSection = styled.div`\n  padding: 20px;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { ColorRing } from \"react-loader-spinner\";\nimport { ErrorMessage } from \"../ErrorMessage/ErrorMessage\";\nimport { fetchGetMovieReviews } from \"../../services/movies-api\";\n\nimport { ReviewsSection } from \"../Reviews/Reviews.styled\";\n\nexport const Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetchGetMovieReviews(movieId)\n            .then(({ results }) => { setReviews(results) })\n            .catch(error => { setError(error) })\n            .finally(() => setLoading(false));\n    }, [movieId]);\n\n    return (\n        <ReviewsSection>\n            <ColorRing\n                visible={loading}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"blocks-loading\"\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n\n            {reviews && reviews.length > 0 &&\n                (<ul>\n                    {\n                        reviews.map(({ id, author, content }) => {\n                    \n                            return (\n                                <li key={id}>\n                                    <h3>{author}</h3>\n                                    <p>{content}</p>\n                                </li>\n                                );\n                            })\n                    }\n                </ul>)}\n\n            {reviews && reviews.length === 0 && <p>We don't have any reviews for this movie.</p>}  \n                      \n            {error && <ErrorMessage message={error.message}/>}\n        </ReviewsSection>\n    );\n};\n\nexport default Reviews;","const API_KEY = 'a054d8c11346494a17ab5d0edb325506';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async() => {\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n   \n    return await response.json();\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n  \n    return await response.json();\n};\n\nexport const fetchGetMovieDetails = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n\nexport const fetchGetMovieCast = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n\nexport const fetchGetMovieReviews = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n"],"names":["Box","styled","Message","StyledPoster","ErrorMessage","message","src","defaultImage","alt","width","ReviewsSection","Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","fetchGetMovieReviews","then","results","catch","finally","visible","height","ariaLabel","wrapperClass","colors","length","map","id","author","content","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","fetchSearchMovies","query","ok","Error","fetchGetMovieDetails","fetchGetMovieCast"],"sourceRoot":""}