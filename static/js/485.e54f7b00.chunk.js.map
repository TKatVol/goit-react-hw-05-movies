{"version":3,"file":"static/js/485.e54f7b00.chunk.js","mappings":"uMAEaA,E,OAAkBC,GAAAA,IAAH,4D,SCEfC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAACL,EAAD,WACKG,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACtB,OACI,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,qBAAiEI,QAAjE,IAAiEA,EAAAA,EAASC,IAAfF,EAElE,KACD,SAAC,KAAD,MAGX,C,+HCfYP,E,OAAkBC,GAAAA,IAAH,0C,SCgC5B,EA3Ba,WACT,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACND,GAAW,IACXE,EAAAA,EAAAA,MACKC,MAAK,SAAAhB,GAAYW,EAAUX,EAAOiB,QAAU,IAC5CC,SAAQ,kBAAML,GAAW,EAAjB,GAChB,GAAE,KAGC,UAAChB,EAAD,YACI,4CACA,SAAC,KAAD,CACIsB,QAASP,EACTQ,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAEzD,SAACzB,EAAA,EAAD,CAAWC,OAAQA,MAG9B,C,sLChCKyB,EAAU,mCACVC,EAAW,+BAEJX,EAAmB,mCAAG,oGACRY,MAAM,GAAD,OAAID,EAAJ,qCAAyCD,IADtC,cACzBG,EADyB,gBAGlBA,EAASC,OAHS,mFAAH,qDAMnBC,EAAiB,mCAAG,WAAOC,GAAP,uFACNJ,MAAM,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDM,IADrD,WACvBH,EADuB,QAEfI,GAFe,sBAGnB,IAAIC,MAAM,0DAHS,uBAMhBL,EAASC,OANO,mFAAH,sDASjBK,EAAoB,mCAAG,WAAO9B,GAAP,uFACTuB,MAAM,GAAD,OAAID,EAAJ,kBAAsBtB,EAAtB,oBAAoCqB,IADhC,WAC1BG,EAD0B,QAGlBI,GAHkB,sBAItB,IAAIC,MAAM,0DAJY,uBAOnBL,EAASC,OAPU,mFAAH,sDAUpBM,EAAiB,mCAAG,WAAO/B,GAAP,uFACNuB,MAAM,GAAD,OAAID,EAAJ,kBAAsBtB,EAAtB,4BAA4CqB,IAD3C,WACvBG,EADuB,QAGfI,GAHe,sBAInB,IAAIC,MAAM,0DAJS,uBAOhBL,EAASC,OAPO,mFAAH,sDAUjBO,EAAoB,mCAAG,WAAOhC,GAAP,uFACTuB,MAAM,GAAD,OAAID,EAAJ,kBAAsBtB,EAAtB,4BAA4CqB,IADxC,WAC1BG,EAD0B,QAGlBI,GAHkB,sBAItB,IAAIC,MAAM,0DAJY,uBAOnBL,EAASC,OAPU,mFAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport { StyledContainer } from \"../MovieList/MovieList.styled\";\r\n\r\nexport const MovieList = ({ movies }) => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <StyledContainer>\r\n            {movies.map(({ id, title, name }) => {\r\n                return (\r\n                    <Link to={`/movies/${id}`} state={{ from: location }} key={id}> {title ?? name}</Link>\r\n                );\r\n            })}\r\n            <Outlet />\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nMovieList.propTypes = {\r\n    movies: PropTypes.array,\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 20px;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport { fetchTrendingMovies } from \"../../services/movies-api\";\r\nimport { MovieList } from \"../../components/MovieList/MovieList\";\r\n\r\nimport { StyledContainer } from \"../Home/Home.styled\";\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchTrendingMovies()\r\n            .then(movies => { setMovies(movies.results) })\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <h1>Trending today</h1>\r\n            <ColorRing\r\n                visible={loading}\r\n                height=\"80\"\r\n                width=\"80\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n            <MovieList movies={movies} />\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Home;","const API_KEY = 'a054d8c11346494a17ab5d0edb325506';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchTrendingMovies = async() => {\r\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n   \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchSearchMovies = async (query) => {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n  \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieDetails = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieCast = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieReviews = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n"],"names":["StyledContainer","styled","MovieList","movies","location","useLocation","map","id","title","name","to","state","from","useState","setMovies","loading","setLoading","useEffect","fetchTrendingMovies","then","results","finally","visible","height","width","ariaLabel","wrapperClass","colors","API_KEY","BASE_URL","fetch","response","json","fetchSearchMovies","query","ok","Error","fetchGetMovieDetails","fetchGetMovieCast","fetchGetMovieReviews"],"sourceRoot":""}