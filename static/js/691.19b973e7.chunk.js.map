{"version":3,"file":"static/js/691.19b973e7.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport { StyledContainer } from \"../MovieList/MovieList.styled\";\r\n\r\nexport const MovieList = ({ movies }) => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <StyledContainer>\r\n            {movies.map(({ id, title, name }) => {\r\n                return (\r\n                    <Link to={`/movies/${id}`} state={{ from: location }} key={id}> {title ?? name}</Link>\r\n                );\r\n            })}\r\n            <Outlet />\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nMovieList.propTypes = {\r\n    movies: PropTypes.array,\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 400px;\r\n    background-color: #fff;\r\n    border: 1px solid #e9eff5;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`;\r\n  \r\nexport const SearchFormButton = styled.button`\r\n    display: inline-block;\r\n    min-width: 60px;\r\n    height: 20px;\r\n    border: 0;\r\n      \r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n  \r\nexport const SearchFormInput = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 16px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n`;","import { useSearchParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport { fetchSearchMovies } from \"../../services/movies-api\";\r\nimport { MovieList } from \"../../components/MovieList/MovieList\";\r\n\r\nimport { StyledContainer, SearchForm, SearchFormButton, SearchFormInput } from \"../Movies/Movies.styled\";\r\n\r\nconst Movies = () => {\r\n    const [movies, setMovies] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const queryParams = searchParams.get(\"query\");\r\n        \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const value = event.target.elements.query.value.toLowerCase().trim();\r\n        if (value === '') {\r\n            clearMoviesList();\r\n            return alert(\"What are you looking for? Type something :)\");\r\n        };\r\n        setSearchParams(value !== '' ? { query: value } : {});\r\n        event.target.reset();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!queryParams) {\r\n            return;\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        fetchSearchMovies(queryParams)\r\n            .then(({ results }) => {\r\n                if (results.length === 0) {\r\n                    clearMoviesList();\r\n                    alert('Oops.. Not found!');\r\n                    return;\r\n                };\r\n\r\n                setMovies(results);\r\n            })\r\n            .finally(() => setLoading(false));\r\n    }, [queryParams]);\r\n\r\n    const clearMoviesList = () => {\r\n        setMovies([]);\r\n    };\r\n       \r\n    return (\r\n        <StyledContainer>\r\n            <SearchForm onSubmit={handleSubmit} >\r\n                <SearchFormInput\r\n                    name=\"query\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search movies\"\r\n                />\r\n                <SearchFormButton type=\"submit\">Search</SearchFormButton>\r\n            </SearchForm>\r\n\r\n            <ColorRing\r\n                visible={loading}\r\n                height=\"80\"\r\n                width=\"80\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {queryParams && movies && < MovieList movies={movies} />}\r\n            \r\n        </StyledContainer>\r\n    )\r\n};\r\n\r\nexport default Movies;","const API_KEY = 'a054d8c11346494a17ab5d0edb325506';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchTrendingMovies = async() => {\r\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n   \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchSearchMovies = async (query) => {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n  \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieDetails = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieCast = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieReviews = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n"],"names":["StyledContainer","styled","MovieList","movies","location","useLocation","map","id","title","name","to","state","from","SearchForm","SearchFormButton","SearchFormInput","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","fetchSearchMovies","then","results","length","clearMoviesList","alert","finally","onSubmit","event","preventDefault","value","target","elements","query","toLowerCase","trim","reset","type","autoComplete","autoFocus","placeholder","visible","height","width","ariaLabel","wrapperClass","colors","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","ok","Error","fetchGetMovieDetails","fetchGetMovieCast","fetchGetMovieReviews"],"sourceRoot":""}