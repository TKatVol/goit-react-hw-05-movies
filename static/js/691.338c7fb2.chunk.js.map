{"version":3,"file":"static/js/691.338c7fb2.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  padding: 20px;\n  display: grid;\n`;\n","import PropTypes from \"prop-types\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport { StyledContainer } from \"../MoviesList/MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <StyledContainer>\n            {movies.map(({ id, title, name }) => {\n                return (\n                    <Link to={`/movies/${id}`} state={{ from: location }} key={id}> {title ?? name}</Link>\n                );\n            })}\n            <Outlet />\n        </StyledContainer>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n};","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 400px;\n    background-color: #fff;\n    border: 1px solid #e9eff5;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n  \nexport const SearchFormButton = styled.button`\n    display: inline-block;\n    min-width: 60px;\n    height: 20px;\n    border: 0;\n      \n    cursor: pointer;\n    outline: none;\n`;\n  \nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 16px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n`;","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { ColorRing } from \"react-loader-spinner\";\nimport { fetchSearchMovies } from \"../../services/movies-api\";\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\n\nimport { StyledContainer, SearchForm, SearchFormButton, SearchFormInput } from \"../Movies/Movies.styled\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParams = searchParams.get(\"query\");\n        \n    const handleSubmit = event => {\n        event.preventDefault();\n        const value = event.target.elements.query.value.toLowerCase().trim();\n        if (value === '') {\n            clearMoviesList();\n            return alert(\"What are you looking for? Type something :)\");\n        };\n        setSearchParams(value !== '' ? { query: value } : {});\n        event.target.reset();\n    };\n\n    useEffect(() => {\n        if (!queryParams) {\n            return;\n        };\n\n        setLoading(true);\n\n        fetchSearchMovies(queryParams)\n            .then(({ results }) => {\n                if (results.length === 0) {\n                    clearMoviesList();\n                    alert('Oops.. Not found!');\n                    return;\n                };\n\n                setMovies(results);\n            })\n            .finally(() => setLoading(false));\n    }, [queryParams]);\n\n    const clearMoviesList = () => {\n        setMovies([]);\n    };\n       \n    return (\n        <StyledContainer>\n            <SearchForm onSubmit={handleSubmit} >\n                <SearchFormInput\n                    name=\"query\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                />\n                <SearchFormButton type=\"submit\">Search</SearchFormButton>\n            </SearchForm>\n\n            <ColorRing\n                visible={loading}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"blocks-loading\"\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n\n            {queryParams && movies && < MoviesList movies={movies} />}\n            \n        </StyledContainer>\n    )\n};\n\nexport default Movies;","const API_KEY = 'a054d8c11346494a17ab5d0edb325506';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async() => {\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n   \n    return await response.json();\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n  \n    return await response.json();\n};\n\nexport const fetchGetMovieDetails = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n\nexport const fetchGetMovieCast = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n\nexport const fetchGetMovieReviews = async (id) => {\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n\n    if (!response.ok) {\n        throw new Error('Oops.. Something went wrong. Please try again later...');\n    };\n\n    return await response.json();\n};\n"],"names":["StyledContainer","styled","MoviesList","movies","location","useLocation","map","id","title","name","to","state","from","SearchForm","SearchFormButton","SearchFormInput","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","fetchSearchMovies","then","results","length","clearMoviesList","alert","finally","onSubmit","event","preventDefault","value","target","elements","query","toLowerCase","trim","reset","type","autoComplete","autoFocus","placeholder","visible","height","width","ariaLabel","wrapperClass","colors","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","ok","Error","fetchGetMovieDetails","fetchGetMovieCast","fetchGetMovieReviews"],"sourceRoot":""}