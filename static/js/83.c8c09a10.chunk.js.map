{"version":3,"file":"static/js/83.c8c09a10.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-weight: 800;\r\n  color: #78141b;\r\n`;\r\n\r\nexport const StyledPoster = styled.img`\r\n  margin-right: 20px;\r\n`","import { Box, StyledPoster, Message } from \"../ErrorMessage/ErrorMessage.styled\";\r\nimport defaultImage from \"../../images/defaultImage.jpg\";\r\n\r\nexport const ErrorMessage = ({message}) => {\r\n    return (\r\n        <Box>\r\n            <StyledPoster src={defaultImage} alt=\"movie card\" width=\"240\" />\r\n            <Message>{message}</Message>\r\n        </Box>\r\n    );\r\n};","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const AdditionalSection = styled.div`\r\n  display: grid;\r\n  padding: 20px;\r\n  border-top: 1px solid #a28183;\r\n  border-bottom: 1px solid #a28183;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nexport const GoBackButton = styled(Link)`\r\n  padding: 2px;\r\n  text-decoration: none;\r\n  font-weight: 800;\r\n  text-decoration: none;\r\n  background-color: #8b747e;\r\n  color: #78141b;\r\n\r\n  :hover {\r\n    color: #000000;\r\n    background-color: #78141b;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCard = styled.div`\r\n    display: flex;\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledPoster = styled.img`\r\n    margin-right: 20px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledText = styled.div`\r\n    padding: 10px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { StyledCard, StyledPoster, Wrapper, StyledText } from \"../MovieInfo/MovieInfo.styled\";\r\nimport defaultImage from \"../../images/defaultImage.jpg\";\r\n\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n    const { poster_path, original_title, release_date, vote_average, overview, genres } = movie;\r\n\r\n    const imgSrc = poster_path === null ? defaultImage : IMG_URL + poster_path;\r\n    const date = release_date === \"\" ? null : `(${release_date.slice(0, -6)})`;\r\n    const userScore = Math.round(vote_average);\r\n    const genresType = genres.map(({ name }) => { return name }).splice(0.3).join(' ');\r\n       \r\n    return (\r\n        <StyledCard>\r\n            <StyledPoster src={imgSrc} alt={original_title} width=\"240\" height=\"340\" />\r\n            <Wrapper>\r\n                <h1>{original_title}  {date}</h1>\r\n                <StyledText>User Score: {userScore}</StyledText>\r\n                <h2>Overview:</h2>\r\n                <StyledText>{overview}</StyledText>\r\n                <h2>Genres:</h2>\r\n                <StyledText>{genresType}</StyledText>\r\n            </Wrapper>\r\n        </StyledCard>\r\n    );\r\n};\r\n\r\nexport default MovieInfo;\r\n\r\nMovieInfo.propTypes = {\r\n    movies: PropTypes.object,\r\n};","\r\nimport { useLocation, useParams, Link, Outlet} from \"react-router-dom\";\r\nimport { useState, useEffect, useRef, Suspense } from \"react\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\nimport { fetchGetMovieDetails} from \"../../services/movies-api\";\r\nimport { StyledContainer, GoBackButton, AdditionalSection, Title} from \"../MovieDetails/MovieDetails.styled\";\r\nimport MovieInfo from \"../../components/MovieInfo/MovieInfo\";\r\nimport { ErrorMessage } from \"../../components/ErrorMessage/ErrorMessage\";\r\n\r\nconst MovieDetails = () => {\r\n    const location = useLocation();\r\n    const { movieId } = useParams();\r\n    const [movieDetals, setMovieDetals] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    \r\n    const href = useRef({\r\n        pathname: location.state?.from.pathname ?? \"\",\r\n        search: location.state?.from.search ?? \"\",\r\n    });\r\n   \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchGetMovieDetails(movieId)\r\n            .then(data => { setMovieDetals(data) })\r\n            .catch(error => { setError(error) })\r\n            .finally(() => setLoading(false));\r\n    }, [movieId]);\r\n\r\n    const { pathname, search } = href.current;\r\n\r\n    const backLinkHref = `${pathname}${search}` === \"\"\r\n        ? \"/\"\r\n        : `${pathname}${search}`;\r\n          \r\n    return (\r\n        <StyledContainer>\r\n            <GoBackButton to={backLinkHref}>Go Back</GoBackButton>\r\n            \r\n            <ColorRing\r\n                visible={loading}\r\n                height=\"80\"\r\n                width=\"80\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n                       \r\n                {movieDetals && (\r\n                <>\r\n                    <MovieInfo movie={movieDetals} />\r\n                                           \r\n                    <AdditionalSection>\r\n                        <Title>Additional information</Title>\r\n                        <Link to={\"cast\"}>Cast</Link>\r\n                        <Link to={\"reviews\"}>Reviews</Link>\r\n                    </AdditionalSection>\r\n                    <Suspense fallback={null}>\r\n                        <Outlet />  \r\n                    </Suspense>    \r\n                </>   \r\n            )}\r\n                             \r\n            {error && <ErrorMessage message={error.message} />}\r\n        </StyledContainer>\r\n    )\r\n};\r\n\r\nexport default MovieDetails;","const API_KEY = 'a054d8c11346494a17ab5d0edb325506';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchTrendingMovies = async() => {\r\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\r\n   \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchSearchMovies = async (query) => {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n  \r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieDetails = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieCast = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchGetMovieReviews = async (id) => {\r\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Oops.. Something went wrong. Please try again later...');\r\n    };\r\n\r\n    return await response.json();\r\n};\r\n"],"names":["Box","styled","Message","StyledPoster","ErrorMessage","message","src","defaultImage","alt","width","StyledContainer","AdditionalSection","Title","GoBackButton","Link","StyledCard","Wrapper","StyledText","movie","poster_path","original_title","release_date","vote_average","overview","genres","imgSrc","date","slice","userScore","Math","round","genresType","map","name","splice","join","height","location","useLocation","movieId","useParams","useState","movieDetals","setMovieDetals","loading","setLoading","error","setError","href","useRef","pathname","state","from","search","useEffect","fetchGetMovieDetails","then","data","catch","finally","current","backLinkHref","to","visible","ariaLabel","wrapperClass","colors","Suspense","fallback","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","fetchSearchMovies","query","ok","Error","id","fetchGetMovieCast","fetchGetMovieReviews"],"sourceRoot":""}